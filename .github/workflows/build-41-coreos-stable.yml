name: coreos-stable (41)
on:
  merge_group:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
  schedule:
    - cron: '25 0 * * *'  # 0025 UTC everyday (20 minutes after 42)
  workflow_dispatch:
    inputs:
      bazzite_tag:
        description: "The release tag for the bazzite kernel"
        required: false
        type: string

env:
  AKMODS_BAZZITE_TAG: ${{ inputs.bazzite_tag }}
  AKMODS_KERNEL_FLAVOR: coreos-stable

jobs:
  cache_kernel:
    name: Cache coreos-stable (41)
    runs-on: ubuntu-24.04
    outputs:
      KCKEY: coreos-stable-${{ steps.kernel-version.outputs.kernel_release }}
      json_b64: ${{ steps.kernel-version.outputs.json_b64 }}
    container:
      image: "ghcr.io/ublue-os/devcontainer:latest"
      options: "--privileged --volume /var/lib/containers:/var/lib/containers --security-opt seccomp=unconfined --security-opt label=disable --user 0:0"
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Mark Directory as Safe
        run: git config --system --ad safe.directory "$GITHUB_WORKSPACE"
      
      - name: Get Kernel Version
        id: kernel-version
        run: just get-kernel-version

      - name: Cache Kernel RPMs
        id: cache-kernel
        if: contains(fromJSON('["schedule", "workflow_dispatch", "merge_group"]'), github.event_name)
        uses: actions/cache@v4
        with:
          path: ${{ steps.kernel-version.outputs.KCPATH }}
          key: coreos-stable-${{ steps.kernel-version.outputs.kernel_release }} # job outputs KCKEY

      - name: Retrieve Signing Key
        if: contains(fromJSON('["schedule", "workflow_dispatch", "merge_group"]'), github.event_name) && steps.cache-kernel.outputs.cache-hit != 'true'
        shell: bash
        run: |
          mkdir -p certs
          echo "${{ secrets.KERNEL_PRIVKEY }}" > certs/private_key.priv
          echo "${{ secrets.AKMOD_PRIVKEY_20230518 }}" > certs/private_key_2.priv
          # DEBUG: get character count of key
          wc -c certs/private_key.priv
          wc -c certs/private_key_2.priv

      - name: Fetch Kernel
        if: contains(fromJSON('["schedule", "workflow_dispatch", "merge_group"]'), github.event_name) && steps.cache-kernel.outputs.cache-hit != 'true'
        run: just fetch-kernel

      - name: List Cached Kernel RPMs
        if: contains(fromJSON('["schedule", "workflow_dispatch", "merge_group"]'), github.event_name) 
        run: find ${{ steps.kernel-version.outputs.KCPATH }}
  build-common:
    uses: ./.github/workflows/reusable-build.yml
    secrets: inherit
    needs: cache_kernel
    with:
      version: 41
      kernel_flavor: coreos-stable
      akmods_target: common
      kernel_cache_key: ${{ needs.cache_kernel.outputs.KCKEY }}
      json_b64: ${{ needs.cache_kernel.outputs.json_b64 }}
  build-nvidia:
    uses: ./.github/workflows/reusable-build.yml
    secrets: inherit
    needs: cache_kernel
    with:
      version: 41
      kernel_flavor: coreos-stable
      akmods_target: nvidia
      kernel_cache_key: ${{ needs.cache_kernel.outputs.KCKEY }}
      json_b64: ${{ needs.cache_kernel.outputs.json_b64 }}
  build-nvidia-open:
    uses: ./.github/workflows/reusable-build.yml
    secrets: inherit
    needs: cache_kernel
    with:
      version: 41
      kernel_flavor: coreos-stable
      akmods_target: nvidia-open
      kernel_cache_key: ${{ needs.cache_kernel.outputs.KCKEY }}
      json_b64: ${{ needs.cache_kernel.outputs.json_b64 }}
  build-zfs:
    uses: ./.github/workflows/reusable-build.yml
    secrets: inherit
    needs: cache_kernel
    with:
      version: 41
      kernel_flavor: coreos-stable
      akmods_target: zfs
      kernel_cache_key: ${{ needs.cache_kernel.outputs.KCKEY }}
      json_b64: ${{ needs.cache_kernel.outputs.json_b64 }}
